// Code generated by MockGen. DO NOT EDIT.
// Source: portarius/resident (interfaces: IResidentService)

// Package mock_resident is a generated GoMock package.
package mock_resident

import (
residentDomain "portarius/internal/resident/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

type MockIResidentService struct {
	ctrl     *gomock.Controller
	recorder *MockIResidentServiceMockRecorder
}


type MockIResidentServiceMockRecorder struct {
	mock *MockIResidentService
}

func NewMockIResidentService(ctrl *gomock.Controller) *MockIResidentService {
	mock := &MockIResidentService{ctrl: ctrl}
	mock.recorder = &MockIResidentServiceMockRecorder{mock}
	return mock
}

func (m *MockIResidentService) EXPECT() *MockIResidentServiceMockRecorder {
	return m.recorder
}

func (m *MockIResidentService) CreateResident(arg0 *residentDomain.Resident) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateResident", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (mr *MockIResidentServiceMockRecorder) CreateResident(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateResident", reflect.TypeOf((*MockIResidentService)(nil).CreateResident), arg0)
}

func (m *MockIResidentService) DeleteResident(arg0 uint) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteResident", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (mr *MockIResidentServiceMockRecorder) DeleteResident(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteResident", reflect.TypeOf((*MockIResidentService)(nil).DeleteResident), arg0)
}

func (m *MockIResidentService) GetAllResidents() ([]residentDomain.Resident, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllResidents")
	ret0, _ := ret[0].([]residentDomain.Resident)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (mr *MockIResidentServiceMockRecorder) GetAllResidents() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllResidents", reflect.TypeOf((*MockIResidentService)(nil).GetAllResidents))
}

func (m *MockIResidentService) GetResidentByID(arg0 uint) (*residentDomain.Resident, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResidentByID", arg0)
	ret0, _ := ret[0].(*residentDomain.Resident)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (mr *MockIResidentServiceMockRecorder) GetResidentByID(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResidentByID", reflect.TypeOf((*MockIResidentService)(nil).GetResidentByID), arg0)
}

func (m *MockIResidentService) UpdateResident(arg0 *residentDomain.Resident) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateResident", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

func (mr *MockIResidentServiceMockRecorder) UpdateResident(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateResident", reflect.TypeOf((*MockIResidentService)(nil).UpdateResident), arg0)
}
